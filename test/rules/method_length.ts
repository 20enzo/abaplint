import {MethodLength} from "../../src/rules/method_length";
import {testRule} from "./_utils";

const tests = [
  {abap: "parser error", cnt: 0},
  {abap: "WRITE: / 'abc'.", cnt: 0},
  {abap: "METHOD foobar. ENDMETHOD.", cnt: 0},
  {abap: "METHOD foobar. WRITE foo. ENDMETHOD.", cnt: 0},

  {abap: "METHOD foobar.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "WRITE foo.\n" +
    "ENDMETHOD.", cnt: 1},
];

testRule(tests, "test method_length rule", MethodLength);